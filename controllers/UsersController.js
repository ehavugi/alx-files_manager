const { v4: uuidv4 } = require('uuid'); // For generating a unique ID
const sha1 = require('sha1');
const dbClient = require('../utils/db');

const UsersController = {
  async postNew(req, res) {
    const { email, password } = req.body;

    if (!email) {
      return res.status(400).json({ error: 'Missing email' });
    }

    if (!password) {
      return res.status(400).json({ error: 'Missing password' });
    }

    const db = dbClient.client.db();
    const usersCollection = db.collection('users');

    // Check if the email already exists
    const existingUser = await usersCollection.findOne({ email });
    if (existingUser) {
      return res.status(400).json({ error: 'Already exists' });
    }

    // Hash the password using SHA1
    const hashedPassword = sha1(password);

    // Create a new user object
    const newUser = {
      email,
      password: hashedPassword,
    };

    // Generate a unique ID (auto-generated by MongoDB)
    newUser._id = uuidv4();

    // Insert the new user into the database
    await usersCollection.insertOne(newUser);

    // Return the new user with only email and id
    const responseUser = {
      email: newUser.email,
      id: newUser._id,
    };

    return res.status(201).json(responseUser);
  },
};

module.exports = UsersController;
